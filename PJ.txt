# Statements starting with '#' are ignored.
# ";" Denotes end of line.
# All variables are integers and can be named any lower-case letter a-z.
# e.i.: "<name(a-z)> = <value/operator(s)>;"
# Note that variable assignments don't follow order of operations.
a = 10;
b = 20;
c = a + b;

# IF statements are the following syntax: 
# "if <variable/value> <double operator> <variable/value>:"
# "<if statement body>"
# "$"
# The "$" sign denotes the end of the IF block.
# Note that || and && Cannot be used.
# ELIF and ELSE statements follow the same rules
if a + b == c:
	a = a * 
	3;
$
elif a    - b > 0:
	# Elif code
$
else:
	c = 100;    
$

# LOOPs are the following syntax:
# "loop <variable/value> <double operator> <variable/value>:"
# The "$" sign denotes the end of the LOOP block.
# "break" ends the loop.
i = 5;
loop i >= 0:
	a = a - i;
	i = i - 1;
	if a < b:
		break;
	$
$



<Code> -> <Statement> | <Statement> <Code>
<Statement> -> <Assigment> | <Construct> 
<Assigmnet> -> <varible> = <Expression> ;
<varible> -> a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|Z
<Expression> -> ( <varible> | <number> ) | ( <varible> | <number> ) <operator> <Expression> 
<operator> -> + | - | * | / 
<Construct> -> (<Branch> | <Loop> ) $
<Branch> -> <IF> | <Else IF> | <Else>
<IF> -> if <Expression> <Logical operator> <Expression> : <Code>
<Else IF> -> elif <Expression> <Logical operator> <Expression> : <Code>
<else> -> else : <Code>
<LOOP> -> LOOP <Expression> <Logical operator> <Expression> : <Code>



<Main> -> BEGIN MAIN <Program> END Main
<Program> -> <Statement> ; | <Statement> ; <Program>
<Statement> -> <assignment> 




